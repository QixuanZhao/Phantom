#version 460 core

out float occlusion;

layout(pixel_center_integer) in vec4 gl_FragCoord;

uniform sampler2D input_position_view;
uniform sampler2D input_normal_view;
uniform sampler2D input_depth;

uniform int kernelSize = 4;
uniform float radius = 3.0;
uniform float cDistance;

uniform bool autoRadius = true;

uniform mat4 projection;

float random(vec4 seed4) {
    float dot_product = dot(seed4, vec4(12.9898,78.233,45.164,94.673));
    return fract(sin(dot_product) * 43758.5453123);
}

vec3 samples[] = vec3[] (
    vec3(0.00595234, 0.055169, 0.04461),
    vec3(-0.0487552, -0.0318493, 0.0532396),
    vec3(-0.000539426, 0.00242971, 0.0118074),
    vec3(0.0353467, 0.0349879, 0.0704189),
    vec3(-0.0320486, 0.0291363, 0.0247426),
    vec3(-0.0306137, -0.0510395, 0.0689626),
    vec3(-0.00780051, 0.0256487, 0.021147),
    vec3(0.0422217, 0.0150179, 0.0136626),
    vec3(0.00473405, 0.00135297, 0.00759249),
    vec3(-0.0235314, 0.0273077, 0.0219662),
    vec3(-0.000415946, -0.00483571, 0.00202569),
    vec3(0.01107, 0.0173918, 0.0152469),
    vec3(0.0311043, 0.0245727, 0.0565437),
    vec3(-0.00549354, -0.00328473, 0.00215439),
    vec3(-0.0255048, -0.0513898, 0.050102),
    vec3(-0.0208523, -0.000162, 0.00587232),
    vec3(-0.0117527, 0.0110115, 0.00924389),
    vec3(0.000334366, -0.0127895, 0.00904996),
    vec3(0.0105286, 0.057656, 0.0588632),
    vec3(0.0249837, -0.00286252, 0.0161157),
    vec3(0.0145327, 0.00153218, 0.046273),
    vec3(0.0158818, 0.0212735, 0.00784424),
    vec3(-0.0286559, -0.0771532, 0.0509967),
    vec3(-0.0163554, 0.0856677, 0.0296079),
    vec3(0.0318809, -0.0462284, 0.040071),
    vec3(0.0521249, 0.0104232, 0.0503142),
    vec3(-0.0104732, -0.0261351, 0.0315192),
    vec3(-0.00969858, 0.0726565, 0.0630076),
    vec3(-0.0235805, -0.0556784, 0.0461633),
    vec3(0.0166423, -0.0111639, 0.0292603),
    vec3(0.0172417, 0.0022196, 0.0141893),
    vec3(0.0130422, 0.00847123, 0.00786819),
    vec3(-0.0537558, 0.0338561, 0.0614701),
    vec3(-0.00867718, -0.054828, 0.0504256),
    vec3(0.00980336, 0.0414739, 0.0366514),
    vec3(-0.0185489, 0.0576066, 0.0556769),
    vec3(-0.00634133, -0.00788712, 0.00825131),
    vec3(-0.0436702, 0.043325, 0.0189789),
    vec3(-0.0174253, -0.0223433, 0.0359898),
    vec3(-0.0577823, -0.013902, 0.0672922),
    vec3(0.0354894, 0.020638, 0.0253693),
    vec3(9.54574e-07, -0.00819825, 0.00715329),
    vec3(0.05475, -0.0162551, 0.0428955),
    vec3(-0.0608375, 0.00150216, 0.0355893),
    vec3(0.00349315, 0.016921, 0.0422406),
    vec3(-0.00305912, -0.0103657, 0.00354463),
    vec3(-0.0342422, 0.021014, 0.0358164),
    vec3(0.022038, 0.0317555, 0.0338842),
    vec3(-0.0558248, 0.0322913, 0.0288018),
    vec3(-0.0119905, -0.0235429, 0.0270671),
    vec3(-0.0242078, 0.0106929, 0.037851),
    vec3(-0.0842894, -0.00857146, 0.0541662),
    vec3(-0.0446637, -0.0596805, 0.0289534),
    vec3(-0.0119251, 0.00250968, 0.0118111),
    vec3(0.083747, -0.0223276, 0.0395474),
    vec3(-0.0222269, 0.0336654, 0.0438384),
    vec3(-0.0775209, -0.0221464, 0.0699213),
    vec3(-0.0301127, 0.0151195, 0.0196762),
    vec3(-0.0293745, -0.0390488, 0.0213041),
    vec3(-0.00385748, -0.0598434, 0.0647174),
    vec3(0.0280539, -0.02503, 0.01668),
    vec3(0.00951011, 0.036902, 0.017147),
    vec3(0.019704, -0.00413435, 0.0110819),
    vec3(0.0259225, 0.0232027, 0.0427785),
    vec3(0.0104334, 0.0239115, 0.0240666),
    vec3(-0.00139853, 0.00180268, 0.00260246),
    vec3(-0.0695124, 0.040758, 0.0367566),
    vec3(-0.108414, -0.00322636, 0.0338155),
    vec3(-0.03117, 0.0199104, 0.0094998),
    vec3(0.00115285, -0.00231462, 0.00800881),
    vec3(-0.0322364, -0.0299204, 0.0166329),
    vec3(0.00963889, 0.00997436, 0.00482701),
    vec3(0.0481303, -0.0281453, 0.0438558),
    vec3(-0.0021726, -0.0165829, 0.0524654),
    vec3(0.0335027, -0.0105297, 0.0251828),
    vec3(0.0804415, -0.0367157, 0.0738556),
    vec3(-0.0299052, 0.0335282, 0.0686101),
    vec3(-0.0763328, -0.0236984, 0.030495),
    vec3(-0.0192455, -0.0261546, 0.0153052),
    vec3(0.0266178, 0.0303214, 0.0304323),
    vec3(0.0270886, 0.0925926, 0.0365124),
    vec3(-0.0429353, 0.0483222, 0.0303436),
    vec3(-0.0447429, 0.0161188, 0.0662469),
    vec3(0.0133675, -0.00538946, 0.0148948),
    vec3(-0.0819547, 0.0330252, 0.029742),
    vec3(-0.0463153, 0.0394024, 0.027067),
    vec3(0.0890335, -0.0539224, 0.0586339),
    vec3(-0.024528, -0.0464717, 0.0143976),
    vec3(-0.0154708, 0.000323978, 0.0207426),
    vec3(0.0347606, -0.00430107, 0.0264265),
    vec3(0.00676151, -0.0244414, 0.0112877),
    vec3(0.0306196, -0.0367959, 0.0348136),
    vec3(0.0563435, -0.0408667, 0.0417609),
    vec3(0.0528682, 0.0276465, 0.0481252),
    vec3(0.015078, -0.014057, 0.0153845),
    vec3(0.0361888, -0.0746276, 0.0672621),
    vec3(0.0425066, 0.0446755, 0.101335),
    vec3(-0.0143827, -0.102926, 0.0741204),
    vec3(-0.0443419, -0.0455619, 0.0188623),
    vec3(0.0299446, 0.012455, 0.0155712),
    vec3(0.0355404, -0.0334444, 0.050306),
    vec3(-0.0500186, -0.0682274, 0.0531361),
    vec3(0.0524314, 0.0559748, 0.0329948),
    vec3(0.0442841, -0.0491941, 0.0370013),
    vec3(-0.0197121, -0.00567687, 0.0134982),
    vec3(0.028444, 0.0324171, 0.0317526),
    vec3(0.00815508, 0.0176388, 0.027531),
    vec3(-0.0157525, -0.0204341, 0.0146437),
    vec3(0.00212039, 0.00545829, 0.017972),
    vec3(0.0535604, -0.0489312, 0.0312027),
    vec3(-0.00527509, -0.000853118, 0.00226755),
    vec3(0.0215126, 0.0126264, 0.0279658),
    vec3(0.0714574, 0.0155384, 0.1011),
    vec3(-0.0291835, -0.021825, 0.0222468),
    vec3(0.0560928, -0.0027253, 0.0512924),
    vec3(-0.0157024, 0.025142, 0.0981115),
    vec3(-0.00425842, -0.00361011, 0.0110976),
    vec3(0.0317872, 0.0116554, 0.0985212),
    vec3(0.0112893, 0.0142231, 0.0072082),
    vec3(-0.0398019, 0.0408085, 0.0165697),
    vec3(-0.0494222, -0.0225675, 0.0878473),
    vec3(-0.00491322, -0.00165048, 0.0213916),
    vec3(-0.0908763, 0.0412633, 0.111203),
    vec3(0.102639, -0.0211115, 0.0918506),
    vec3(-0.0153094, -0.0543872, 0.0296656),
    vec3(-0.00870218, -0.000232924, 0.0457039),
    vec3(-0.0353738, -0.0143152, 0.0408838),
    vec3(-6.78665e-05, -0.00403029, 0.012434),
    vec3(-0.0349086, 0.0611904, 0.055018),
    vec3(0.050947, 0.0435801, 0.0401312),
    vec3(-0.00236978, -0.136499, 0.0648552),
    vec3(-0.000661083, 0.0168174, 0.0181677),
    vec3(-0.0258366, 0.0261957, 0.0197137),
    vec3(0.0953012, -0.0402941, 0.0773859),
    vec3(0.00470916, -0.0164601, 0.0153434),
    vec3(-0.0407119, -0.00149553, 0.0813623),
    vec3(-0.00831656, -0.00919865, 0.00373552),
    vec3(-0.0111514, -0.00168066, 0.0213281),
    vec3(-0.00128439, -0.0785698, 0.0550958),
    vec3(-0.0609328, -0.0431163, 0.0224005),
    vec3(-0.0452003, -0.0490641, 0.0257159),
    vec3(0.0457949, 0.103929, 0.107985),
    vec3(0.0447726, 0.0451363, 0.0738813),
    vec3(-0.0794989, -0.0116197, 0.117845),
    vec3(-0.0170884, -0.0211644, 0.0134352),
    vec3(0.122233, -0.0460453, 0.0672485),
    vec3(-0.0162338, 0.105768, 0.0709855),
    vec3(0.0518068, -0.0945154, 0.0853126),
    vec3(0.0140357, -0.0641974, 0.065856),
    vec3(-0.0977744, 0.0435353, 0.0735988),
    vec3(0.0727282, -0.0692592, 0.112715),
    vec3(-0.0196252, 0.111368, 0.0710376),
    vec3(-0.0248334, 0.0326322, 0.0590027),
    vec3(0.095857, 0.0414251, 0.0396946),
    vec3(0.0289896, 0.00122784, 0.0121308),
    vec3(-0.00211881, -0.00191295, 0.00187518),
    vec3(-0.0373058, -0.0363295, 0.0181339),
    vec3(-0.0317453, -0.00617227, 0.0839546),
    vec3(0.00318652, -0.0173453, 0.018012),
    vec3(0.0515968, -0.0883023, 0.0577064),
    vec3(-0.019679, 0.0171713, 0.0191189),
    vec3(0.0359613, -0.0562735, 0.100302),
    vec3(0.0522061, 0.0275666, 0.0179692),
    vec3(-0.0889, -0.0604928, 0.051285),
    vec3(0.0981152, 0.0926824, 0.0911623),
    vec3(-0.00645793, 0.0119841, 0.0165364),
    vec3(0.0328853, -0.102684, 0.101852),
    vec3(-0.0954837, -0.0475015, 0.111601),
    vec3(0.0152872, -0.00312624, 0.00571538),
    vec3(0.0484275, -0.00637174, 0.0463656),
    vec3(-0.0145789, -0.0364021, 0.00947093),
    vec3(-0.0171621, -0.12014, 0.0370632),
    vec3(-0.0313332, 0.0881234, 0.177753),
    vec3(0.0240054, 0.0329089, 0.0582119),
    vec3(-0.0885522, 0.0413543, 0.0364444),
    vec3(0.00198037, -0.000610348, 0.00189421),
    vec3(0.0566781, 0.114597, 0.111068),
    vec3(-0.0106615, -0.0205189, 0.0423906),
    vec3(-0.0457181, -0.0729621, 0.0473561),
    vec3(0.0112834, -0.00308, 0.00615613),
    vec3(-0.000676027, -0.101969, 0.109632),
    vec3(-0.0281643, -0.00834079, 0.0207621),
    vec3(0.0834022, -0.0706153, 0.0522872),
    vec3(-0.000108588, -0.00853986, 0.0150862),
    vec3(0.0523108, -0.070502, 0.141829),
    vec3(-0.0114969, -0.0898927, 0.0737186),
    vec3(0.0419957, -0.0688483, 0.0704253),
    vec3(0.00648516, -0.133038, 0.148224),
    vec3(0.0857263, -0.0958601, 0.157055),
    vec3(-0.017897, -0.0282829, 0.0297715),
    vec3(0.0221829, 0.000685659, 0.0145616),
    vec3(0.160198, 0.0219288, 0.0570509),
    vec3(-0.0631192, -0.0680107, 0.103951),
    vec3(-0.0041226, -0.0203335, 0.0121318),
    vec3(0.109338, 0.065616, 0.0502992),
    vec3(-0.020503, -0.107955, 0.118348),
    vec3(0.0924862, 0.0495536, 0.103379),
    vec3(-0.0997506, 0.0508116, 0.136508),
    vec3(-0.0783814, -0.118019, 0.0854498),
    vec3(0.150631, 0.0721798, 0.0716196),
    vec3(0.00593014, -0.00769638, 0.00762594),
    vec3(-0.0865057, -0.0299743, 0.0633553),
    vec3(0.0222596, 0.0232429, 0.0145897),
    vec3(-0.0427619, -0.0236783, 0.107503),
    vec3(0.0645375, -0.0563002, 0.0594372),
    vec3(-0.0766558, 0.147766, 0.0814101),
    vec3(-0.0260602, -0.0142348, 0.0319086),
    vec3(-0.107529, 0.048876, 0.0436723),
    vec3(0.00735822, -0.158719, 0.122043),
    vec3(0.107238, 0.0121563, 0.0475985),
    vec3(0.0548887, 0.146149, 0.0465388),
    vec3(0.237741, -0.0522285, 0.0628769),
    vec3(0.0104, -0.00299107, 0.00384122),
    vec3(0.00187834, -0.0179329, 0.0879194),
    vec3(0.0119226, 0.000180959, 0.00945661),
    vec3(0.000756641, 0.00236876, 0.00288592),
    vec3(0.105258, 0.0760951, 0.0732516),
    vec3(-0.017533, -0.0458271, 0.0249789),
    vec3(-0.0673916, 0.029964, 0.0571984),
    vec3(0.105624, -0.101743, 0.0521703),
    vec3(0.0683366, -0.0390877, 0.110627),
    vec3(0.113785, -0.116022, 0.0633439),
    vec3(-0.0233013, 0.0272336, 0.0319712),
    vec3(-0.231237, -0.0492191, 0.0696293),
    vec3(0.0618378, -0.0578531, 0.0524561),
    vec3(0.0272693, -0.00192839, 0.0115637),
    vec3(0.0238144, -0.0463621, 0.0603594),
    vec3(-0.017632, -0.0203444, 0.0259065),
    vec3(0.0656821, 0.0631952, 0.0295731),
    vec3(0.0763717, -0.19493, 0.0631676),
    vec3(0.00707681, -0.00978121, 0.0136143),
    vec3(-0.120567, -0.0958088, 0.0986044),
    vec3(-0.130069, 0.16538, 0.061546),
    vec3(-0.121121, 0.191124, 0.0823534),
    vec3(-0.0539813, 0.0255407, 0.0450408),
    vec3(-0.0308407, 0.001455, 0.0520061),
    vec3(-0.0946839, -0.0118116, 0.0963939),
    vec3(0.0923865, 0.0358095, 0.0816653),
    vec3(0.0141882, 0.0425829, 0.105084),
    vec3(-0.106145, 0.147179, 0.0493156),
    vec3(0.00692283, 0.0532824, 0.042662),
    vec3(0.0419521, 0.0165119, 0.0567636),
    vec3(-0.00912702, -0.000869801, 0.0112976),
    vec3(0.0578615, 0.109666, 0.0834595),
    vec3(-0.135949, 0.0562183, 0.0808161),
    vec3(0.0550513, 0.130219, 0.068731),
    vec3(0.0789204, -0.00266801, 0.252631),
    vec3(0.00280225, -0.0172512, 0.0659915),
    vec3(0.00212661, 0.00768454, 0.00409518),
    vec3(0.0755234, -0.0770938, 0.1606),
    vec3(0.0637873, -0.139643, 0.139435),
    vec3(-0.041125, 0.0386007, 0.020203),
    vec3(-0.0234191, 0.0943865, 0.194443),
    vec3(0.123871, 0.0307303, 0.24673),
    vec3(0.00539029, -0.0467726, 0.0881098),
    vec3(0.0669508, -0.173278, 0.09979),
    vec3(-0.0809249, 0.0532322, 0.157624),
    vec3(-0.0948226, 0.096529, 0.0891381),
    vec3(-0.0167414, -0.190902, 0.118515),
    vec3(0.0185579, 0.102392, 0.103186),
    vec3(0.00900239, 0.121316, 0.0861621),
    vec3(-0.0282651, 0.262163, 0.0971829),
    vec3(-0.0169166, -0.0153995, 0.0218668),
    vec3(-0.0394541, -0.0125082, 0.0397457),
    vec3(0.137482, -0.071099, 0.198844),
    vec3(0.202487, -0.121209, 0.121038),
    vec3(-0.0569599, 0.00447923, 0.0543383),
    vec3(-0.0844447, -0.133313, 0.038443),
    vec3(-0.00755827, 0.158342, 0.117268),
    vec3(0.0525425, -0.252052, 0.158288),
    vec3(0.0561338, -0.0245269, 0.0911481),
    vec3(0.0989336, 0.232655, 0.138607),
    vec3(0.175158, -0.0625571, 0.102305),
    vec3(-0.0655479, 0.00599327, 0.0720621),
    vec3(-0.0236542, 0.00218497, 0.0315018),
    vec3(0.0592204, -0.0277894, 0.0698459),
    vec3(-0.123815, -0.11691, 0.0447038),
    vec3(0.222114, 0.101769, 0.223377),
    vec3(0.160562, -0.0999936, 0.10063),
    vec3(0.0234798, 0.13976, 0.0944767),
    vec3(0.0911683, 0.043534, 0.0408282),
    vec3(0.140677, 0.12707, 0.0886852),
    vec3(0.0841287, -0.013277, 0.117033),
    vec3(-0.157911, 0.0682646, 0.166282),
    vec3(-0.0655196, -0.0695012, 0.10048),
    vec3(0.0904535, 0.107058, 0.258063),
    vec3(0.022708, -0.130013, 0.117289),
    vec3(0.0323297, -0.075252, 0.0928542),
    vec3(0.0600231, 0.0815126, 0.101841),
    vec3(-0.159114, 0.191588, 0.191716),
    vec3(0.186184, -0.141365, 0.215367),
    vec3(-0.00397754, 0.232336, 0.261869),
    vec3(0.137644, -0.149974, 0.127573),
    vec3(-0.065002, -0.110476, 0.0991242),
    vec3(0.0588729, 0.0403796, 0.0760201),
    vec3(-0.0276687, 0.00933066, 0.132399),
    vec3(-0.131374, 0.252465, 0.136575),
    vec3(0.00303771, 0.209241, 0.243619),
    vec3(0.0993733, 0.109429, 0.0602894),
    vec3(-0.024621, -0.0242951, 0.086112),
    vec3(0.139088, 0.149213, 0.11044),
    vec3(-0.111647, -0.0957279, 0.0690282),
    vec3(0.00426966, 0.00248744, 0.00340794),
    vec3(-0.0467038, 0.045214, 0.0174375),
    vec3(0.140862, -0.141503, 0.194551),
    vec3(0.283008, 0.0456992, 0.126183),
    vec3(-0.0238153, -0.0514181, 0.0430093),
    vec3(0.0363794, 0.183252, 0.340446),
    vec3(-0.065899, -0.077099, 0.0428934),
    vec3(0.0530568, 0.0705398, 0.0293121),
    vec3(-0.20689, -0.212169, 0.222228),
    vec3(0.0109958, -0.103068, 0.147823),
    vec3(-0.0236467, -0.0209087, 0.0200671),
    vec3(-0.113322, 0.0371839, 0.210694),
    vec3(-0.0125069, -0.00871173, 0.0135439),
    vec3(-0.0812178, 0.247091, 0.0964464),
    vec3(-0.146567, 0.0469265, 0.270187),
    vec3(-0.0375722, 0.000563373, 0.0128289),
    vec3(-0.00334273, -0.108873, 0.336294),
    vec3(-0.105168, 0.196295, 0.238417),
    vec3(0.21309, 0.291816, 0.123392),
    vec3(-0.227367, -0.129896, 0.159091),
    vec3(-0.00843357, -0.00462387, 0.0063229),
    vec3(-0.068076, 0.158226, 0.0880359),
    vec3(-0.0087259, -0.173766, 0.21262),
    vec3(0.00234298, 0.0264683, 0.123031),
    vec3(-0.00155825, -0.183002, 0.349659),
    vec3(-0.123876, 0.110452, 0.188464),
    vec3(-0.0626186, -0.0599936, 0.218919),
    vec3(-0.367059, -0.109347, 0.158279),
    vec3(-0.0177721, 0.0201514, 0.173543),
    vec3(0.0455946, -0.0255604, 0.0398057),
    vec3(0.0410556, 0.0161525, 0.0186847),
    vec3(0.0655907, 0.0605462, 0.0331223),
    vec3(0.0944878, -0.0308809, 0.0911435),
    vec3(-0.0562755, 0.381674, 0.100083),
    vec3(-0.0468599, 0.13834, 0.249759),
    vec3(-0.1053, -0.176781, 0.078643),
    vec3(0.240559, -0.208205, 0.145965),
    vec3(0.0923122, 0.220228, 0.20956),
    vec3(-0.336825, 0.0179084, 0.303604),
    vec3(0.0371237, -0.135423, 0.200208),
    vec3(0.319631, -0.130771, 0.316046),
    vec3(0.106009, -0.235042, 0.260344),
    vec3(-0.322976, -0.218125, 0.279863),
    vec3(-0.410821, 0.159585, 0.109718),
    vec3(-0.0444416, 0.0520708, 0.151397),
    vec3(-0.00591413, 0.00338586, 0.00348199),
    vec3(-0.0958671, 0.274736, 0.0981019),
    vec3(0.247689, -0.0272498, 0.42753),
    vec3(0.0242337, 0.00615464, 0.0184158),
    vec3(-0.00913857, -0.0417404, 0.0281334),
    vec3(-0.0527363, -0.0635819, 0.0231432),
    vec3(-0.189949, -0.276639, 0.365286),
    vec3(0.249068, 0.119658, 0.0816149),
    vec3(-0.10043, 0.231177, 0.157714),
    vec3(0.0114414, -0.0395911, 0.020832),
    vec3(0.161264, -0.143629, 0.224964),
    vec3(-0.00411541, -0.016267, 0.00812784),
    vec3(-0.00351787, 0.00123293, 0.0128842),
    vec3(-0.263273, 0.297977, 0.224057),
    vec3(-0.0724586, 0.048708, 0.0404038),
    vec3(-0.275022, -0.193941, 0.212352),
    vec3(-0.218382, -0.114589, 0.214356),
    vec3(-0.296331, 0.183062, 0.279355),
    vec3(-0.145117, 0.064815, 0.0592325),
    vec3(-0.116149, -0.317519, 0.268599),
    vec3(-0.351818, 0.0333189, 0.431568),
    vec3(0.0712169, -0.06908, 0.0590981),
    vec3(-0.397466, -0.0750133, 0.154243),
    vec3(0.497932, -0.0920045, 0.237531),
    vec3(0.0105857, 0.0104699, 0.0120306),
    vec3(0.0216713, 0.0456839, 0.0318638),
    vec3(0.00154076, -0.145653, 0.545458),
    vec3(0.0123264, -0.0335491, 0.0541872),
    vec3(-0.137264, 0.365181, 0.158935),
    vec3(0.090958, -0.0127402, 0.339381),
    vec3(-0.00391047, 0.157523, 0.139065),
    vec3(0.321173, 0.17864, 0.234161),
    vec3(-0.04361, -0.0948441, 0.0594664),
    vec3(0.422167, -0.381467, 0.137681),
    vec3(-0.00214556, -0.059042, 0.0616059),
    vec3(0.0657773, -0.0622515, 0.0535349),
    vec3(-0.421172, -0.10785, 0.407591),
    vec3(0.356633, -0.0156619, 0.143437),
    vec3(0.167304, -0.127736, 0.155273),
    vec3(0.404983, 0.0590415, 0.136247),
    vec3(0.0899349, 0.0734812, 0.0368585),
    vec3(-0.17245, -0.0827093, 0.16033),
    vec3(-0.0211164, -0.0416465, 0.216806),
    vec3(-0.121647, 0.227687, 0.11795),
    vec3(-0.162513, 0.11348, 0.323404),
    vec3(0.0177947, 0.525654, 0.151029),
    vec3(-0.0483992, 0.1039, 0.0314137),
    vec3(0.411218, -0.222997, 0.192528),
    vec3(-0.00182297, 0.0848897, 0.0292694),
    vec3(0.0151099, 0.0995004, 0.164551),
    vec3(0.0538975, -0.181473, 0.0716099),
    vec3(-0.0400083, 0.119032, 0.279959),
    vec3(0.136043, -0.0680428, 0.419194),
    vec3(0.255877, 0.00794716, 0.167904),
    vec3(0.00607939, -0.00667203, 0.00658213),
    vec3(-0.130576, -0.231235, 0.19236),
    vec3(-0.0367874, 0.115307, 0.199104),
    vec3(-0.0394958, -0.162995, 0.192297),
    vec3(0.0595762, -0.508596, 0.418625),
    vec3(-0.145206, -0.0861032, 0.188213),
    vec3(0.00311541, 0.00368295, 0.0134457),
    vec3(-0.0784998, 0.536882, 0.235723),
    vec3(-0.360734, -0.498224, 0.262517),
    vec3(0.00534169, 0.371102, 0.508642),
    vec3(-0.225424, 0.0547279, 0.280099),
    vec3(0.0200635, 0.307709, 0.182777),
    vec3(-0.316947, 0.223887, 0.205681),
    vec3(-0.00262581, 0.0260917, 0.0594976),
    vec3(-0.0167746, -0.0122361, 0.0162295),
    vec3(-0.0270819, 0.0125278, 0.0290243),
    vec3(-0.0106805, -0.00162277, 0.0111909),
    vec3(0.0135364, 0.00701995, 0.0096832),
    vec3(0.0942927, -0.0855732, 0.0826064),
    vec3(0.0161774, 0.138437, 0.168594),
    vec3(-0.130979, 0.428756, 0.330792),
    vec3(-0.0857205, -0.176587, 0.262271),
    vec3(-0.364417, 0.232601, 0.164881),
    vec3(-0.0683392, -0.0507879, 0.162094),
    vec3(0.282415, 0.150434, 0.401829),
    vec3(-0.0515376, -0.01236, 0.0272755),
    vec3(0.0558265, 0.0129038, 0.059832),
    vec3(-0.177715, 0.416411, 0.554842),
    vec3(0.288863, -0.199827, 0.305109),
    vec3(0.028594, 0.252904, 0.251244),
    vec3(-0.1394, 0.0703083, 0.136296),
    vec3(0.11575, -0.123836, 0.102693),
    vec3(0.207277, 0.405537, 0.111455),
    vec3(-0.52953, -0.283935, 0.318151),
    vec3(0.00838428, -0.011973, 0.00548784),
    vec3(0.125147, -0.0936483, 0.29448),
    vec3(-0.140853, -0.0679964, 0.277),
    vec3(-0.0266676, 0.0199914, 0.0255561),
    vec3(-0.0197789, -0.526851, 0.402459),
    vec3(0.234753, 0.425922, 0.295502),
    vec3(-0.013445, 0.0206395, 0.0279426),
    vec3(0.102802, 0.135308, 0.749791),
    vec3(-0.017729, -0.118349, 0.277639),
    vec3(-0.0418672, 0.2688, 0.39285),
    vec3(0.224088, 0.427352, 0.484704),
    vec3(0.10739, -0.0348651, 0.19328),
    vec3(0.115924, -0.119291, 0.553021),
    vec3(0.355272, 0.266391, 0.601253),
    vec3(0.449316, 0.427299, 0.176029),
    vec3(0.023978, 0.314998, 0.124426),
    vec3(-0.369354, 0.473451, 0.46048),
    vec3(0.574078, 0.174832, 0.218082),
    vec3(-0.172326, 0.137077, 0.159011),
    vec3(-0.250881, -0.610175, 0.38783),
    vec3(-0.159158, -0.0281723, 0.207246),
    vec3(-0.114157, -0.385483, 0.361695),
    vec3(-0.0247816, -0.0732864, 0.203249),
    vec3(0.570467, -0.280503, 0.329),
    vec3(-0.105696, 0.00386362, 0.0626362),
    vec3(0.065618, 0.0383327, 0.0500318),
    vec3(0.397861, 0.306935, 0.264),
    vec3(-0.00457546, -0.0581492, 0.0900751),
    vec3(-0.325769, 0.283338, 0.232636),
    vec3(-0.180178, 0.0147364, 0.117075),
    vec3(0.0765487, 0.0577453, 0.0804281),
    vec3(-0.0185927, 0.00947489, 0.0112173),
    vec3(0.00343456, 0.37042, 0.162896),
    vec3(0.428772, -0.465709, 0.161577),
    vec3(0.360529, 0.0635445, 0.382964),
    vec3(-0.188836, 0.294636, 0.447982),
    vec3(0.111953, -0.00377036, 0.140315),
    vec3(-0.0599658, 0.137646, 0.0887012),
    vec3(0.00512755, -0.014089, 0.00759415),
    vec3(0.685416, 0.36258, 0.277858),
    vec3(-0.594612, -0.439133, 0.280141),
    vec3(-0.615519, -0.0208081, 0.157338),
    vec3(-0.313865, 0.341673, 0.676745),
    vec3(-0.354124, -0.13082, 0.273537),
    vec3(0.447657, -0.358097, 0.17672),
    vec3(0.319957, 0.0627035, 0.579867),
    vec3(-0.221015, -0.248327, 0.384807),
    vec3(0.617814, 0.378916, 0.45396),
    vec3(0.0334388, 0.0314947, 0.0864993),
    vec3(-0.223926, -0.163861, 0.15824),
    vec3(0.0675062, -0.104491, 0.704552),
    vec3(0.00107807, 0.0131619, 0.0358564),
    vec3(0.287441, -0.378546, 0.250588),
    vec3(0.183109, 0.0508181, 0.10452),
    vec3(-0.105565, -0.166941, 0.173811),
    vec3(-0.100077, -0.110415, 0.0526501)
);

void main()
{
    ivec2 FragCoord = ivec2(gl_FragCoord.xy);
    float depth = texelFetch(input_depth, FragCoord, 0).r;

    if (depth == 1.0) {
        occlusion = 1.0;
        return;
    }

    float R;

    if (autoRadius) {
        R = sqrt(cDistance);
    } else R = radius;

    vec3 posView = texelFetch(input_position_view, FragCoord, 0).rgb;
    vec3 normalView = texelFetch(input_normal_view, FragCoord, 0).rgb;

    float occluded = 0.0;

    int ri = int(random(posView.xyzx) * samples.length());
    vec3 randVec = samples[ri];
    randVec.z = 0.0;

    vec3 tangent   = normalize(randVec - normalView * dot(randVec, normalView));
    vec3 bitangent = cross(normalView, tangent);
    mat3 TBN       = mat3(tangent, bitangent, normalView);

    for (int i = 0; i < kernelSize; i++) {
        int index = int(random(vec4(gl_FragCoord.xyz, i)) * samples.length());
        vec3 samplePos = TBN * samples[index];
        // vec3 samplePos = TBN * samples[int(i * float(samples.length()) / kernelSize)];
        
        samplePos = posView + samplePos * R;
        
        vec4 offset = projection * vec4(samplePos, 1.0);
        offset.xy /= offset.w;
        offset.xy = offset.xy * 0.5 + 0.5;
        
        if (offset.x > 1.0 || offset.y > 1.0 || offset.x < 0.0 || offset.y < 0.0) continue;
        if (texture(input_depth, offset.xy).r == 1.0) continue;

        float sampleDepth = texture(input_position_view, offset.xy).z;
        float rangeCheck = smoothstep(0.0, 1.0, R / abs(posView.z - sampleDepth));
        // float rangeCheck = R > abs(posView.z - sampleDepth) ? 0.0 : 1.0;
        // rangeCheck = smoothstep(0.0, 1.0, rangeCheck);
        occluded += (sampleDepth >= samplePos.z + rangeCheck ? rangeCheck : 0.0);
    }

    occlusion = 1.0 - occluded / kernelSize;
}